/*
 * WSO2 API Manager - Store
 * This document specifies a **RESTful API** for WSO2 **API Manager** - Store.  It is written with [swagger 2](http://swagger.io/). 
 *
 * OpenAPI spec version: v1.0
 * Contact: architecture@wso2.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.wso2.carbon.apimgt.rest.integration.tests.store.api;

import org.testng.annotations.Test;
import org.wso2.carbon.apimgt.rest.integration.tests.store.ApiException;
import org.wso2.carbon.apimgt.rest.integration.tests.store.model.API;
import org.wso2.carbon.apimgt.rest.integration.tests.store.model.Comment;
import org.wso2.carbon.apimgt.rest.integration.tests.store.model.Document;
import org.wso2.carbon.apimgt.rest.integration.tests.store.model.DocumentList;
import org.wso2.carbon.apimgt.rest.integration.tests.store.model.Rating;
import org.wso2.carbon.apimgt.rest.integration.tests.store.model.RatingList;

/**
 * API tests for APIIndividualApi
 */
public class APIIndividualApiTest {

    private final APIIndividualApi api = new APIIndividualApi();


    /**
     * Remove a Comment
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apisApiIdCommentsCommentIdDeleteTest() throws ApiException {
        String commentId = null;
        String apiId = null;
        String ifMatch = null;
        String ifUnmodifiedSince = null;
        api.apisApiIdCommentsCommentIdDelete(commentId, apiId, ifMatch, ifUnmodifiedSince);

        // TODO: test validations
    }

    /**
     * Get the individual comment given by a username for a certain API.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apisApiIdCommentsCommentIdGetTest() throws ApiException {
        String commentId = null;
        String apiId = null;
        String ifNoneMatch = null;
        String ifModifiedSince = null;
        Comment response = api.apisApiIdCommentsCommentIdGet(commentId, apiId, ifNoneMatch, ifModifiedSince);

        // TODO: test validations
    }

    /**
     * Update a certain Comment
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apisApiIdCommentsCommentIdPutTest() throws ApiException {
        String commentId = null;
        String apiId = null;
        Comment body = null;
        String ifMatch = null;
        String ifUnmodifiedSince = null;
        Comment response = api.apisApiIdCommentsCommentIdPut(commentId, apiId, body, ifMatch, ifUnmodifiedSince);

        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apisApiIdCommentsPostTest() throws ApiException {
        String apiId = null;
        Comment body = null;
        Comment response = api.apisApiIdCommentsPost(apiId, body);

        // TODO: test validations
    }

    /**
     * Downloads a FILE type document/get the inline content or source url of a certain document.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apisApiIdDocumentsDocumentIdContentGetTest() throws ApiException {
        String apiId = null;
        String documentId = null;
        String ifNoneMatch = null;
        String ifModifiedSince = null;
        api.apisApiIdDocumentsDocumentIdContentGet(apiId, documentId, ifNoneMatch, ifModifiedSince);

        // TODO: test validations
    }

    /**
     * Get a particular document associated with an API.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apisApiIdDocumentsDocumentIdGetTest() throws ApiException {
        String apiId = null;
        String documentId = null;
        String ifNoneMatch = null;
        String ifModifiedSince = null;
        Document response = api.apisApiIdDocumentsDocumentIdGet(apiId, documentId, ifNoneMatch, ifModifiedSince);

        // TODO: test validations
    }

    /**
     * Get a list of documents belonging to an API.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apisApiIdDocumentsGetTest() throws ApiException {
        String apiId = null;
        Integer limit = null;
        Integer offset = null;
        String ifNoneMatch = null;
        DocumentList response = api.apisApiIdDocumentsGet(apiId, limit, offset, ifNoneMatch);

        // TODO: test validations
    }

    /**
     * Get details of an API
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apisApiIdGetTest() throws ApiException {
        String apiId = null;
        String ifNoneMatch = null;
        String ifModifiedSince = null;
        API response = api.apisApiIdGet(apiId, ifNoneMatch, ifModifiedSince);

        // TODO: test validations
    }

    /**
     * Get the rating of an API.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apisApiIdRatingsGetTest() throws ApiException {
        String apiId = null;
        Integer limit = null;
        Integer offset = null;
        RatingList response = api.apisApiIdRatingsGet(apiId, limit, offset);

        // TODO: test validations
    }

    /**
     * Get a specific rating of an API.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apisApiIdRatingsRatingIdGetTest() throws ApiException {
        String apiId = null;
        String ratingId = null;
        String ifNoneMatch = null;
        String ifModifiedSince = null;
        Rating response = api.apisApiIdRatingsRatingIdGet(apiId, ratingId, ifNoneMatch, ifModifiedSince);

        // TODO: test validations
    }

    /**
     * Get the swagger of an API
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apisApiIdSwaggerGetTest() throws ApiException {
        String apiId = null;
        String ifNoneMatch = null;
        String ifModifiedSince = null;
        api.apisApiIdSwaggerGet(apiId, ifNoneMatch, ifModifiedSince);

        // TODO: test validations
    }

    /**
     * Adds or updates a rating
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apisApiIdUserRatingPutTest() throws ApiException {
        String apiId = null;
        Rating body = null;
        Rating response = api.apisApiIdUserRatingPut(apiId, body);

        // TODO: test validations
    }

    /**
     * Get WSDL definition
     * <p>
     * This operation can be used to retrieve the swagger definition of an API.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apisApiIdWsdlGetTest() throws ApiException {
        String apiId = null;
        String labelName = null;
        String ifNoneMatch = null;
        String ifModifiedSince = null;
        api.apisApiIdWsdlGet(apiId, labelName, ifNoneMatch, ifModifiedSince);

        // TODO: test validations
    }

}
