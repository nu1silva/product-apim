/*
 * WSO2 API Manager - Store
 * This document specifies a **RESTful API** for WSO2 **API Manager** - Store.  It is written with [swagger 2](http://swagger.io/). 
 *
 * OpenAPI spec version: v1.0
 * Contact: architecture@wso2.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.wso2.carbon.apimgt.rest.integration.tests.store.api;

import org.testng.annotations.Test;
import org.wso2.carbon.apimgt.rest.integration.tests.store.ApiException;
import org.wso2.carbon.apimgt.rest.integration.tests.store.model.CompositeAPI;
import org.wso2.carbon.apimgt.rest.integration.tests.store.model.FileInfo;

import java.io.File;

/**
 * API tests for CompositeAPIIndividualApi
 */
public class CompositeAPIIndividualApiTest {

    private final CompositeAPIIndividualApi api = new CompositeAPIIndividualApi();


    /**
     * Delete a Composite API
     * <p>
     * This operation can be used to delete an existing Composite API proving the Id of the Composite API.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void compositeApisApiIdDeleteTest() throws ApiException {
        String apiId = null;
        String ifMatch = null;
        String ifUnmodifiedSince = null;
        api.compositeApisApiIdDelete(apiId, ifMatch, ifUnmodifiedSince);

        // TODO: test validations
    }

    /**
     * Get details of a Composite API
     * <p>
     * Using this operation, you can retrieve complete details of a single Composite API. You need to provide the Id of the Composite API to retrive it.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void compositeApisApiIdGetTest() throws ApiException {
        String apiId = null;
        String ifNoneMatch = null;
        String ifModifiedSince = null;
        CompositeAPI response = api.compositeApisApiIdGet(apiId, ifNoneMatch, ifModifiedSince);

        // TODO: test validations
    }

    /**
     * Get Composite API implementation
     * <p>
     * This operation can be used to retrieve the Ballerina implementation of a Composite API.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void compositeApisApiIdImplementationGetTest() throws ApiException {
        String apiId = null;
        String ifNoneMatch = null;
        String ifModifiedSince = null;
        api.compositeApisApiIdImplementationGet(apiId, ifNoneMatch, ifModifiedSince);

        // TODO: test validations
    }

    /**
     * Update Composite API implementation
     * <p>
     * This operation can be used to update the Ballerina implementation of a Composite API. Ballerina implementation to be updated is passed as a form data parameter &#x60;apiImplementation&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void compositeApisApiIdImplementationPutTest() throws ApiException {
        String apiId = null;
        File apiImplementation = null;
        String ifMatch = null;
        String ifUnmodifiedSince = null;
        FileInfo response = api.compositeApisApiIdImplementationPut(apiId, apiImplementation, ifMatch, ifUnmodifiedSince);

        // TODO: test validations
    }

    /**
     * Update a Composite API
     * <p>
     * This operation can be used to update an existing Composite API. But the properties &#x60;name&#x60;, &#x60;version&#x60;, &#x60;context&#x60;, &#x60;provider&#x60;, &#x60;state&#x60; will not be changed by this operation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void compositeApisApiIdPutTest() throws ApiException {
        String apiId = null;
        CompositeAPI body = null;
        String ifMatch = null;
        String ifUnmodifiedSince = null;
        CompositeAPI response = api.compositeApisApiIdPut(apiId, body, ifMatch, ifUnmodifiedSince);

        // TODO: test validations
    }

    /**
     * Get swagger definition
     * <p>
     * This operation can be used to retrieve the swagger definition of a Composite API.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void compositeApisApiIdSwaggerGetTest() throws ApiException {
        String apiId = null;
        String ifNoneMatch = null;
        String ifModifiedSince = null;
        api.compositeApisApiIdSwaggerGet(apiId, ifNoneMatch, ifModifiedSince);

        // TODO: test validations
    }

    /**
     * Update swagger definition
     * <p>
     * This operation can be used to update the swagger definition of an existing Composite API. Swagger definition to be updated is passed as a form data parameter &#x60;apiDefinition&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void compositeApisApiIdSwaggerPutTest() throws ApiException {
        String apiId = null;
        String apiDefinition = null;
        String ifMatch = null;
        String ifUnmodifiedSince = null;
        api.compositeApisApiIdSwaggerPut(apiId, apiDefinition, ifMatch, ifUnmodifiedSince);

        // TODO: test validations
    }

}
