/*
 * WSO2 API Manager - Store
 * This document specifies a **RESTful API** for WSO2 **API Manager** - Store.  It is written with [swagger 2](http://swagger.io/). 
 *
 * OpenAPI spec version: v1.0
 * Contact: architecture@wso2.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.wso2.carbon.apimgt.rest.integration.tests.store.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * FileInfo
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-08-22T05:38:36.290Z")
public class FileInfo {
    @SerializedName("relativePath")
    private String relativePath = null;

    @SerializedName("mediaType")
    private String mediaType = null;

    public FileInfo relativePath(String relativePath) {
        this.relativePath = relativePath;
        return this;
    }

    /**
     * relative location of the file (excluding the base context and host of the Publisher API)
     *
     * @return relativePath
     **/
    @ApiModelProperty(example = "apis/01234567-0123-0123-0123-012345678901/thumbnail", value = "relative location of the file (excluding the base context and host of the Publisher API)")
    public String getRelativePath() {
        return relativePath;
    }

    public void setRelativePath(String relativePath) {
        this.relativePath = relativePath;
    }

    public FileInfo mediaType(String mediaType) {
        this.mediaType = mediaType;
        return this;
    }

    /**
     * media-type of the file
     *
     * @return mediaType
     **/
    @ApiModelProperty(example = "image/jpeg", value = "media-type of the file")
    public String getMediaType() {
        return mediaType;
    }

    public void setMediaType(String mediaType) {
        this.mediaType = mediaType;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        FileInfo fileInfo = (FileInfo) o;
        return Objects.equals(this.relativePath, fileInfo.relativePath) &&
                Objects.equals(this.mediaType, fileInfo.mediaType);
    }

    @Override
    public int hashCode() {
        return Objects.hash(relativePath, mediaType);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class FileInfo {\n");

        sb.append("    relativePath: ").append(toIndentedString(relativePath)).append("\n");
        sb.append("    mediaType: ").append(toIndentedString(mediaType)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

