/*
 * WSO2 API Manager - Store
 * This document specifies a **RESTful API** for WSO2 **API Manager** - Store.  It is written with [swagger 2](http://swagger.io/). 
 *
 * OpenAPI spec version: v1.0
 * Contact: architecture@wso2.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.wso2.carbon.apimgt.rest.integration.tests.store.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * Comment
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-08-22T05:38:36.290Z")
public class Comment {
    @SerializedName("commentId")
    private String commentId = null;

    @SerializedName("apiId")
    private String apiId = null;

    @SerializedName("username")
    private String username = null;

    @SerializedName("commentText")
    private String commentText = null;

    @SerializedName("createdTime")
    private String createdTime = null;

    @SerializedName("createdBy")
    private String createdBy = null;

    @SerializedName("lastUpdatedTime")
    private String lastUpdatedTime = null;

    @SerializedName("lastUpdatedBy")
    private String lastUpdatedBy = null;

    public Comment commentId(String commentId) {
        this.commentId = commentId;
        return this;
    }

    /**
     * Get commentId
     *
     * @return commentId
     **/
    @ApiModelProperty(required = true, value = "")
    public String getCommentId() {
        return commentId;
    }

    public void setCommentId(String commentId) {
        this.commentId = commentId;
    }

    public Comment apiId(String apiId) {
        this.apiId = apiId;
        return this;
    }

    /**
     * Get apiId
     *
     * @return apiId
     **/
    @ApiModelProperty(required = true, value = "")
    public String getApiId() {
        return apiId;
    }

    public void setApiId(String apiId) {
        this.apiId = apiId;
    }

    public Comment username(String username) {
        this.username = username;
        return this;
    }

    /**
     * If username is not given user invoking the API will be taken as the username.
     *
     * @return username
     **/
    @ApiModelProperty(required = true, value = "If username is not given user invoking the API will be taken as the username. ")
    public String getUsername() {
        return username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    public Comment commentText(String commentText) {
        this.commentText = commentText;
        return this;
    }

    /**
     * Get commentText
     *
     * @return commentText
     **/
    @ApiModelProperty(required = true, value = "")
    public String getCommentText() {
        return commentText;
    }

    public void setCommentText(String commentText) {
        this.commentText = commentText;
    }

    public Comment createdTime(String createdTime) {
        this.createdTime = createdTime;
        return this;
    }

    /**
     * Get createdTime
     *
     * @return createdTime
     **/
    @ApiModelProperty(example = "2017-02-20T13:57:16.229Z", value = "")
    public String getCreatedTime() {
        return createdTime;
    }

    public void setCreatedTime(String createdTime) {
        this.createdTime = createdTime;
    }

    public Comment createdBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    /**
     * Get createdBy
     *
     * @return createdBy
     **/
    @ApiModelProperty(value = "")
    public String getCreatedBy() {
        return createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    public Comment lastUpdatedTime(String lastUpdatedTime) {
        this.lastUpdatedTime = lastUpdatedTime;
        return this;
    }

    /**
     * Get lastUpdatedTime
     *
     * @return lastUpdatedTime
     **/
    @ApiModelProperty(example = "2017-02-20T13:57:16.229Z", value = "")
    public String getLastUpdatedTime() {
        return lastUpdatedTime;
    }

    public void setLastUpdatedTime(String lastUpdatedTime) {
        this.lastUpdatedTime = lastUpdatedTime;
    }

    public Comment lastUpdatedBy(String lastUpdatedBy) {
        this.lastUpdatedBy = lastUpdatedBy;
        return this;
    }

    /**
     * Get lastUpdatedBy
     *
     * @return lastUpdatedBy
     **/
    @ApiModelProperty(value = "")
    public String getLastUpdatedBy() {
        return lastUpdatedBy;
    }

    public void setLastUpdatedBy(String lastUpdatedBy) {
        this.lastUpdatedBy = lastUpdatedBy;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Comment comment = (Comment) o;
        return Objects.equals(this.commentId, comment.commentId) &&
                Objects.equals(this.apiId, comment.apiId) &&
                Objects.equals(this.username, comment.username) &&
                Objects.equals(this.commentText, comment.commentText) &&
                Objects.equals(this.createdTime, comment.createdTime) &&
                Objects.equals(this.createdBy, comment.createdBy) &&
                Objects.equals(this.lastUpdatedTime, comment.lastUpdatedTime) &&
                Objects.equals(this.lastUpdatedBy, comment.lastUpdatedBy);
    }

    @Override
    public int hashCode() {
        return Objects.hash(commentId, apiId, username, commentText, createdTime, createdBy, lastUpdatedTime, lastUpdatedBy);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Comment {\n");

        sb.append("    commentId: ").append(toIndentedString(commentId)).append("\n");
        sb.append("    apiId: ").append(toIndentedString(apiId)).append("\n");
        sb.append("    username: ").append(toIndentedString(username)).append("\n");
        sb.append("    commentText: ").append(toIndentedString(commentText)).append("\n");
        sb.append("    createdTime: ").append(toIndentedString(createdTime)).append("\n");
        sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
        sb.append("    lastUpdatedTime: ").append(toIndentedString(lastUpdatedTime)).append("\n");
        sb.append("    lastUpdatedBy: ").append(toIndentedString(lastUpdatedBy)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

