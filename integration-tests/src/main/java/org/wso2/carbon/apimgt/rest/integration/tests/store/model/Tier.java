/*
 * WSO2 API Manager - Store
 * This document specifies a **RESTful API** for WSO2 **API Manager** - Store.  It is written with [swagger 2](http://swagger.io/). 
 *
 * OpenAPI spec version: v1.0
 * Contact: architecture@wso2.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.wso2.carbon.apimgt.rest.integration.tests.store.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

/**
 * Tier
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-08-22T05:38:36.290Z")
public class Tier {
    @SerializedName("name")
    private String name = null;

    @SerializedName("description")
    private String description = null;
    @SerializedName("tierLevel")
    private TierLevelEnum tierLevel = null;
    @SerializedName("attributes")
    private Map<String, String> attributes = null;
    @SerializedName("requestCount")
    private Long requestCount = null;
    @SerializedName("unitTime")
    private Long unitTime = null;
    @SerializedName("tierPlan")
    private TierPlanEnum tierPlan = null;
    @SerializedName("stopOnQuotaReach")
    private Boolean stopOnQuotaReach = null;

    public Tier name(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get name
     *
     * @return name
     **/
    @ApiModelProperty(required = true, value = "")
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Tier description(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get description
     *
     * @return description
     **/
    @ApiModelProperty(value = "")
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public Tier tierLevel(TierLevelEnum tierLevel) {
        this.tierLevel = tierLevel;
        return this;
    }

    /**
     * Get tierLevel
     *
     * @return tierLevel
     **/
    @ApiModelProperty(value = "")
    public TierLevelEnum getTierLevel() {
        return tierLevel;
    }

    public void setTierLevel(TierLevelEnum tierLevel) {
        this.tierLevel = tierLevel;
    }

    public Tier attributes(Map<String, String> attributes) {
        this.attributes = attributes;
        return this;
    }

    public Tier putAttributesItem(String key, String attributesItem) {
        if (this.attributes == null) {
            this.attributes = new HashMap<String, String>();
        }
        this.attributes.put(key, attributesItem);
        return this;
    }

    /**
     * Custom attributes added to the policy policy
     *
     * @return attributes
     **/
    @ApiModelProperty(value = "Custom attributes added to the policy policy ")
    public Map<String, String> getAttributes() {
        return attributes;
    }

    public void setAttributes(Map<String, String> attributes) {
        this.attributes = attributes;
    }

    public Tier requestCount(Long requestCount) {
        this.requestCount = requestCount;
        return this;
    }

    /**
     * Maximum number of requests which can be sent within a provided unit time
     *
     * @return requestCount
     **/
    @ApiModelProperty(required = true, value = "Maximum number of requests which can be sent within a provided unit time ")
    public Long getRequestCount() {
        return requestCount;
    }

    public void setRequestCount(Long requestCount) {
        this.requestCount = requestCount;
    }

    public Tier unitTime(Long unitTime) {
        this.unitTime = unitTime;
        return this;
    }

    /**
     * Get unitTime
     *
     * @return unitTime
     **/
    @ApiModelProperty(required = true, value = "")
    public Long getUnitTime() {
        return unitTime;
    }

    public void setUnitTime(Long unitTime) {
        this.unitTime = unitTime;
    }

    public Tier tierPlan(TierPlanEnum tierPlan) {
        this.tierPlan = tierPlan;
        return this;
    }

    /**
     * This attribute declares whether this policy is available under commercial or free
     *
     * @return tierPlan
     **/
    @ApiModelProperty(required = true, value = "This attribute declares whether this policy is available under commercial or free ")
    public TierPlanEnum getTierPlan() {
        return tierPlan;
    }

    public void setTierPlan(TierPlanEnum tierPlan) {
        this.tierPlan = tierPlan;
    }

    public Tier stopOnQuotaReach(Boolean stopOnQuotaReach) {
        this.stopOnQuotaReach = stopOnQuotaReach;
        return this;
    }

    /**
     * If this attribute is set to false, you are capabale of sending requests even if the request count exceeded within a unit time
     *
     * @return stopOnQuotaReach
     **/
    @ApiModelProperty(required = true, value = "If this attribute is set to false, you are capabale of sending requests even if the request count exceeded within a unit time ")
    public Boolean getStopOnQuotaReach() {
        return stopOnQuotaReach;
    }

    public void setStopOnQuotaReach(Boolean stopOnQuotaReach) {
        this.stopOnQuotaReach = stopOnQuotaReach;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Tier tier = (Tier) o;
        return Objects.equals(this.name, tier.name) &&
                Objects.equals(this.description, tier.description) &&
                Objects.equals(this.tierLevel, tier.tierLevel) &&
                Objects.equals(this.attributes, tier.attributes) &&
                Objects.equals(this.requestCount, tier.requestCount) &&
                Objects.equals(this.unitTime, tier.unitTime) &&
                Objects.equals(this.tierPlan, tier.tierPlan) &&
                Objects.equals(this.stopOnQuotaReach, tier.stopOnQuotaReach);
    }

    @Override
    public int hashCode() {
        return Objects.hash(name, description, tierLevel, attributes, requestCount, unitTime, tierPlan, stopOnQuotaReach);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Tier {\n");

        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("    tierLevel: ").append(toIndentedString(tierLevel)).append("\n");
        sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
        sb.append("    requestCount: ").append(toIndentedString(requestCount)).append("\n");
        sb.append("    unitTime: ").append(toIndentedString(unitTime)).append("\n");
        sb.append("    tierPlan: ").append(toIndentedString(tierPlan)).append("\n");
        sb.append("    stopOnQuotaReach: ").append(toIndentedString(stopOnQuotaReach)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }


    /**
     * Gets or Sets tierLevel
     */
    @JsonAdapter(TierLevelEnum.Adapter.class)
    public enum TierLevelEnum {
        API("api"),

        APPLICATION("application"),

        SUBSCRIPTION("subscription");

        private String value;

        TierLevelEnum(String value) {
            this.value = value;
        }

        public static TierLevelEnum fromValue(String text) {
            for (TierLevelEnum b : TierLevelEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        public static class Adapter extends TypeAdapter<TierLevelEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final TierLevelEnum enumeration) throws IOException {
                jsonWriter.value(enumeration.getValue());
            }

            @Override
            public TierLevelEnum read(final JsonReader jsonReader) throws IOException {
                String value = jsonReader.nextString();
                return TierLevelEnum.fromValue(String.valueOf(value));
            }
        }
    }

    /**
     * This attribute declares whether this policy is available under commercial or free
     */
    @JsonAdapter(TierPlanEnum.Adapter.class)
    public enum TierPlanEnum {
        FREE("FREE"),

        COMMERCIAL("COMMERCIAL");

        private String value;

        TierPlanEnum(String value) {
            this.value = value;
        }

        public static TierPlanEnum fromValue(String text) {
            for (TierPlanEnum b : TierPlanEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        public static class Adapter extends TypeAdapter<TierPlanEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final TierPlanEnum enumeration) throws IOException {
                jsonWriter.value(enumeration.getValue());
            }

            @Override
            public TierPlanEnum read(final JsonReader jsonReader) throws IOException {
                String value = jsonReader.nextString();
                return TierPlanEnum.fromValue(String.valueOf(value));
            }
        }
    }

}

